// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    String @id @default(cuid())
  votes Vote[]
}

model Word {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String

  word          String
  definition    String
  example       String?
  pronunciation String
  images        WordImage[]
  signs         Sign[]

  @@fulltext([word])
}

model WordImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String
  url       String
  word      Word?    @relation(fields: [wordId], references: [id])
  wordId    String?  @unique
}

model Sign {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       String
  signDescription String?

  word   Word   @relation(fields: [wordId], references: [id])
  wordId String
  video  Video?

  @@fulltext([wordId])
}

model Video {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String

  score  Int?   @default(0)
  url    String
  votes  Vote[]
  sign   Sign?  @relation(fields: [signId], references: [id])
  signId String @unique

  @@index([signId])
}

model SignImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String
  url       String
  // Sign      Sign?    @relation(fields: [signId], references: [id])
  signId    String?

  @@index([signId])
}

model Vote {
  id    String @id @default(uuid())
  value Int // this can be either 1 (upvote) or -1 (downvote)

  // Relation to User
  userId String
  user   User   @relation(fields: [userId], references: [id])

  // Relation to Sign
  signVideoId String
  video       Video  @relation(fields: [signVideoId], references: [id])

  @@index([userId])
  @@index([signVideoId])
}
